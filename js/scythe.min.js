//@prepros-append _init.js
//@prepros-append utils.js

//@prepros-append game/index.js
//@prepros-append ui/index.js

//@prepros-append init.js

//@prepros-append _end.js
;(function(){
	"use strict";

	var log = console.log;
var cloneObject = function(orig){
	var destiny = {};
  for (var prop in orig) {
    if (orig.hasOwnProperty(prop)) {
      destiny[prop] = orig[prop];
    }
  }
  return destiny;
};
/* CONFIG ***************/
var colorNames = {
	'red': 'red',
	'black': 'black',
	'yellow': 'yellow',
	'blue': 'blue',
	'green': 'green',
	'white': 'white',
	'violet': 'violet'
};
/* DECK ***************/
var originalDeck = [{
	'num': 1,
	'e1': {
		'move': [{
			'type': 'worker',
			'color': colorNames['blue']
		}, {
			'type': 'encounter_or_factory'
		}, {
			'type': 'character'
		}],
		'gain': [{
			'type': 'power'
		}, {
			'type': 'worker'
		}],
		'recruit': ['power']
	},
	'e2': {
		'move': [{
			'type': 'worker'
		}],
		'gain': [{
			'type': 'power',
			'count': 4
		}],
		'recruit': ['power']
	},
	'advance': true,
	'combat': {
		'power': [6, 7, 7],
		'cards': 1
	},
	'resources': 1
}, {
	'num': 2,
	'e1': {
		'move': [{
			'type': 'encounter_or_factory',
			'color': colorNames['white']
		}, {
			'type': 'worker'
		}],
		'gain': [{
			'type': 'money',
			'color': colorNames['yellow']
		}, {
			'type': 'money'
		}],
		'recruit': []
	},
	'e2': {
		'move': [{
			'type': 'encounter_or_factory',
			'color': colorNames['white']
		}, {
			'type': 'worker'
		}],
		'gain': [{
			'type': 'money',
			'color': colorNames['yellow']
		}, {
			'type': 'card'
		}, {
			'type': 'character_or_mech'
		}],
		'recruit': ['money']
	},
	'advance': true,
	'combat': {
		'power': [5, 6, 7],
		'cards': 2
	},
	'resources': 2
}, {
	'num': 3,
	'e1': {
		'move': [{
			'type': 'worker'
		}],
		'gain': [{
			'type': 'power',
			'count': 3
		}],
		'recruit': []
	},
	'e2': {
		'move': [{
			'type': 'worker'
		}],
		'gain': [{
			'type': 'power',
			'count': 2
		}, {
			'type': 'worker'
		}],
		'recruit': ['popularity']
	},
	'advance': true,
	'combat': {
		'power': [3, 7, 7],
		'cards': 0
	},
	'resources': 0
}, {
	'num': 4,
	'notAutometta': true,
	'e1': {
		'move': [{
			'type': 'worker'
		}],
		'gain': [{
			'type': 'money',
			'color': colorNames['yellow']
		}, {
			'type': 'card'
		}],
		'recruit': ['card']
	},
	'e2': {
		'move': [{
			'type': 'worker'
		}],
		'gain': [{
			'type': 'money',
			'color': colorNames['yellow']
		}, {
			'type': 'money',
			'count': 2
		}],
		'recruit': ['power']
	},
	'advance': false,
	'combat': {
		'power': [0, 1, 2],
		'cards': 1
	},
	'resources': 0
}, {
	'num': 5,
	'e1': {
		'move': [{
			'type': 'encounter_or_factory',
			'color': colorNames['green']
		}, {
			'type': 'worker'
		}],
		'gain': [{
			'type': 'character_or_mech',
			'color': colorNames['violet']
		}, {
			'type': 'worker'
		}, {
			'type': 'money'
		}],
		'recruit': ['money']
	},
	'e2': {
		'move': [{
			'type': 'mech'
		}],
		'gain': [{
			'type': 'power',
			'count': 4
		}, {
			'type': 'worker'
		}],
		'recruit': ['card']
	},
	'advance': true,
	'combat': {
		'power': [2, 4, 7],
		'cards': 1
	},
	'resources': 4
}, {
	'num': 6,
	'e1': {
		'move': [{
			'type': 'worker'
		}],
		'gain': [{
			'type': 'power',
			'count': 2
		}],
		'recruit': []
	},
	'e2': {
		'move': [{
			'type': 'mech'
		}],
		'gain': [{
			'type': 'money',
			'color': colorNames['yellow']
		}, {
			'type': 'power',
			'count': 2
		}, {
			'type': 'character_or_mech'
		}],
		'recruit': ['power']
	},
	'advance': true,
	'combat': {
		'power': [7, 7, 7],
		'cards': 1
	},
	'resources': 0
}, {
	'num': 7,
	'notAutometta': true,
	'e1': {
		'move': [{
			'attack': 5,
			'type': 'character_or_mech',
			'color': colorNames['black']
		}, {
			'type': 'worker'
		}],
		'gain': [{
			'type': 'worker'
		}, {
			'type': 'money'
		}],
		'recruit': ['popularity']
	},
	'e2': {
		'move': [{
			'attack': 5,
			'type': 'character_or_mech',
			'color': colorNames['black']
		}, {
			'type': 'mech'
		}],
		'gain': [{
			'type': 'character_or_mech',
			'color': colorNames['red']
		}, {
			'type': 'character_or_mech'
		}, {
			'type': 'card'
		}],
		'recruit': ['money']
	},
	'advance': true,
	'combat': {
		'power': [5, 7, 7],
		'cards': 0
	},
	'resources': 2
}, {
	'num': 8,
	'notAutometta': true,
	'e1': {
		'move': [{
			'type': 'encounter_or_factory',
			'color': colorNames['violet']
		}, {
			'type': 'mech'
		}, {
			'type': 'worker'
		}],
		'gain': [{
			'type': 'character_or_mech',
			'color': colorNames['violet']
		}, {
			'type': 'character_or_mech'
		}],
		'recruit': []
	},
	'e2': {
		'move': [{
			'type': 'encounter_or_factory',
			'color': colorNames['violet']
		}, {
			'type': 'mech'
		}],
		'gain': [{
			'type': 'power',
			'color': colorNames['black']
		}, {
			'type': 'money'
		}, {
			'type': 'character_or_mech'
		}],
		'recruit': ['money']
	},
	'advance': true,
	'combat': {
		'power': [0, 7, 7],
		'cards': 2
	},
	'resources': 1
}, {
	'num': 9,
	'e1': {
		'move': [{
			'type': 'encounter_or_factory',
			'color': colorNames['white']
		}, {
			'type': 'mech'
		}, {
			'type': 'worker'
		}],
		'gain': [{
			'type': 'worker'
		}, {
			'type': 'character_or_mech'
		}],
		'recruit': ['popularity']
	},
	'e2': {
		'move': [{
			'type': 'encounter_or_factory',
			'color': colorNames['white']
		}, {
			'type': 'mech'
		}],
		'gain': [{
			'type': 'power',
			'count': 3
		}, {
			'type': 'worker'
		}],
		'recruit': ['popularity']
	},
	'advance': true,
	'combat': {
		'power': [4, 7, 7],
		'cards': 1
	},
	'resources': 3
}, {
	'num': 10,
	'e1': {
		'move': [{
			'type': 'mech'
		}, {
			'type': 'worker'
		}],
		'gain': [{
			'type': 'character_or_mech'
		}, {
			'type': 'power',
			'count': 2
		}],
		'recruit': []
	},
	'e2': {
		'move': [{
			'type': 'mech'
		}],
		'gain': [{
			'type': 'money',
			'count': 2
		}, {
			'type': 'character_or_mech'
		}],
		'recruit': []
	},
	'advance': true,
	'combat': {
		'power': [0, 0, 0],
		'cards': 1
	},
	'resources': 1
}, {
	'num': 11,
	'e1': {
		'move': [{
			'type': 'mech'
		}, {
			'type': 'encounter_or_factory'
		}, {
			'type': 'character'
		}],
		'gain': [{
			'type': 'worker',
			'color': colorNames['red']
		}, {
			'type': 'worker'
		}, {
			'type': 'money'
		}],
		'recruit': []
	},
	'e2': {
		'move': [{
			'type': 'worker',
			'color': colorNames['blue']
		}, {
			'type': 'encounter_or_factory'
		}, {
			'type': 'character'
		}],
		'gain': [{
			'type': 'power',
			'count': 3
		}, {
			'type': 'worker'
		}],
		'recruit': ['card']
	},
	'advance': true,
	'combat': {
		'power': [6, 7, 7],
		'cards': 2
	},
	'resources': 0
}, {
	'num': 12,
	'e1': {
		'move': [{
			'type': 'worker',
			'color': colorNames['blue']
		}, {
			'type': 'mech'
		}],
		'gain': [{
			'type': 'power',
			'count': 4
		}],
		'recruit': []
	},
	'e2': {
		'move': [{
			'type': 'worker',
			'color': colorNames['blue']
		}, {
			'type': 'mech'
		}],
		'gain': [{
			'type': 'worker'
		}, {
			'type': 'money'
		}, {
			'type': 'character_or_mech'
		}],
		'recruit': ['power']
	},
	'advance': true,
	'combat': {
		'power': [4, 5, 7],
		'cards': 2
	},
	'resources': 1
}, {
	'num': 13,
	'e1': {
		'move': [{
			'attack': 4,
			'type': 'character_or_mech',
			'color': colorNames['black']
		}, {
			'type': 'encounter_or_factory'
		}, {
			'type': 'character'
		}],
		'gain': [{
			'type': 'money'
		}],
		'recruit': []
	},
	'e2': {
		'move': [{
			'attack': 5,
			'type': 'character_or_mech',
			'color': colorNames['black']
		}, {
			'type': 'encounter_or_factory'
		}, {
			'type': 'character'
		}],
		'gain': [{
			'type': 'card'
		}, {
			'type': 'money',
			'count': 2
		}],
		'recruit': ['money']
	},
	'advance': true,
	'combat': {
		'power': [3, 5, 7],
		'cards': 3
	},
	'resources': 0
}, {
	'num': 14,
	'e1': {
		'move': [{
			'type': 'encounter_or_factory'
		}, {
			'type': 'character'
		}],
		'gain': [{
			'type': 'worker'
		}, {
			'type': 'card'
		}],
		'recruit': ['card']
	},
	'e2': {
		'move': [{
			'attack': 7,
			'type': 'character_or_mech'
		}, {
			'attack': 'worker',
			'type': 'worker'
		}, {
			'type': 'mech'
		}],
		'gain': [{
			'type': 'power',
			'count': 3
		}],
		'recruit': ['popularity']
	},
	'advance': true,
	'combat': {
		'power': [1, 1, 1],
		'cards': 1
	},
	'resources': 0
}, {
	'num': 15,
	'e1': {
		'move': [{
			'type': 'encounter_or_factory'
		}, {
			'type': 'character'
		}],
		'gain': [{
			'type': 'power',
			'count': 3
		}, {
			'type': 'money'
		}],
		'recruit': ['money']
	},
	'e2': {
		'move': [{
			'attack': 1,
			'type': 'character_or_mech'
		}, {
			'attack': 'worker',
			'type': 'worker'
		}, {
			'type': 'encounter_or_factory'
		}, {
			'type': 'character'
		}],
		'gain': [{
			'type': 'money',
			'color': colorNames['yellow']
		}, {
			'type': 'money',
			'color': colorNames['yellow']
		}],
		'recruit': ['card']
	},
	'advance': false,
	'combat': {
		'power': [7, 7, 7],
		'cards': 0
	},
	'resources': 2
}, {
	'num': 16,
	'e1': {
		'move': [{
			'type': 'encounter_or_factory'
		}, {
			'type': 'character'
		}],
		'gain': [{
			'type': 'character_or_mech'
		}],
		'recruit': []
	},
	'e2': {
		'move': [{
			'attack': 5,
			'type': 'character_or_mech'
		}, {
			'attack': 'worker',
			'type': 'worker'
		}, {
			'type': 'mech'
		}],
		'gain': [{
			'type': 'power',
			'color': colorNames['black']
		}, {
			'type': 'character_or_mech'
		}, {
			'type': 'money'
		}],
		'recruit': []
	},
	'advance': true,
	'combat': {
		'power': [5, 7, 7],
		'cards': 1
	},
	'resources': 4
}, {
	'num': 17,
	'notAutometta': true,
	'e1': {
		'move': [{
			'attack': 6,
			'type': 'character_or_mech'
		}, {
			'attack': 'worker',
			'type': 'worker'
		}, {
			'type': 'worker'
		}],
		'gain': [{
			'type': 'money',
			'count': 2
		}],
		'recruit': ['power']
	},
	'e2': {
		'move': [{
			'attack': 8,
			'type': 'character_or_mech'
		}, {
			'type': 'worker'
		}],
		'gain': [{
			'type': 'money',
			'color': colorNames['yellow']
		}, {
			'type': 'money'
		}, {
			'type': 'worker'
		}],
		'recruit': ['popularity']
	},
	'advance': false,
	'combat': {
		'power': [7, 7, 7],
		'cards': 2
	},
	'resources': 2
}, {
	'num': 18,
	'e1': {
		'move': [{
			'type': 'encounter_or_factory'
		}, {
			'type': 'character'
		}],
		'gain': [{
			'type': 'worker',
			'color': colorNames['green']
		}, {
			'type': 'worker'
		}, {
			'type': 'money'
		}],
		'recruit': []
	},
	'e2': {
		'move': [{
			'type': 'encounter_or_factory'
		}, {
			'type': 'character'
		}],
		'gain': [{
			'type': 'character_or_mech',
			'color': colorNames['green']
		}, {
			'type': 'worker'
		}, {
			'type': 'money',
			'count': 2
		}],
		'recruit': []
	},
	'advance': true,
	'combat': {
		'power': [1, 1, 7],
		'cards': 0
	},
	'resources': 1
}, {
	'num': 19,
	'e1': {
		'move': [{
			'attack': 'worker',
			'type': 'worker'
		}, {
			'type': 'worker'
		}],
		'gain': [{
			'type': 'worker'
		}],
		'recruit': []
	},
	'e2': {
		'move': [{
			'type': 'encounter_or_factory',
			'color': colorNames['green']
		}, {
			'attack': 'worker',
			'type': 'worker'
		}, {
			'type': 'worker'
		}],
		'gain': [{
			'type': 'power',
			'count': 3
		}, {
			'type': 'money'
		}],
		'recruit': ['card']
	},
	'advance': true,
	'combat': {
		'power': [7, 7, 7],
		'cards': 1
	},
	'resources': 1
}];


// var c = [];
// originalDeck.forEach(function(b, k) {
// 	if (!b.advance) c.push(b.num);
// });

// log('c', c);
/* AUTOMA *****************************/
var AUTOMA = (function() {
	var A = {};

	A.colors = [{
		name: colorNames['red'],
		icon: 'ic',
		style: {
			backgroundColor: 'red',
			color: 'white'
		}
	}, {
		name: colorNames['black'],
		icon: 'ic',
		style: {
			backgroundColor: 'black',
			color: 'white'
		}
	}, {
		name: colorNames['yellow'],
		icon: 'ic',
		style: {
			backgroundColor: 'yellow',
			color: 'black'
		}
	}, {
		name: colorNames['blue'],
		icon: 'ic',
		style: {
			backgroundColor: 'blue',
			color: 'white'
		}
	}, {
		name: colorNames['green'],
		icon: 'ic',
		style: {
			backgroundColor: 'green',
			color: 'white'
		}
	}, {
		name: colorNames['white'],
		icon: 'ic',
		style: {
			backgroundColor: 'white',
			color: 'red'
		}
	}];

	A.types = {
		'Autometta': {
			name: 'Autometta',
			ai: true,
			level: 'Easy',
			crossRiver: false,
			strategy: 1,
			stars: 0,
			timeline: [{}, {}, {}, {}, {}, {
				crossRiver: true
			}, {}, {}, {}, {}, {
				changeEstrategy: true,
				star: true
			}, {}, {}, {}, {}, {
				star: true
			}, {}, {}, {
				star: true
			}, {}, {
				star: true
			}, {}, {
				star: true
			}, {
				star: true
			}]
		},
		'Automa': {
			name: 'Automa',
			ai: true,
			level: 'Normal',
			crossRiver: false,
			strategy: 1,
			stars: 0,
			timeline: [{}, {}, {}, {}, {
				crossRiver: true
			}, {}, {}, {}, {}, {
				changeEstrategy: true,
				star: true
			}, {}, {}, {}, {}, {
				star: true
			}, {}, {}, {
				star: true
			}, {}, {
				star: true
			}, {
				star: true
			}, {
				star: true
			}]
		},
		'Automaszyna': {
			name: 'Automaszyna',
			ai: true,
			level: 'Hard',
			crossRiver: false,
			strategy: 1,
			stars: 0,
			timeline: [{}, {}, {}, {
				crossRiver: true
			}, {}, {}, {}, {}, {}, {
				changeEstrategy: true,
				star: true
			}, {}, {}, {
				star: true
			}, {}, {
				star: true
			}, {}, {
				star: true
			}, {
				star: true
			}, {
				star: true
			}]
		},
		'Ultimaszyna': {
			name: 'Ultimaszyna',
			ai: true,
			level: 'Very hard',
			crossRiver: true,
			strategy: 1,
			stars: 0,
			timeline: [{
				crossRiver: true
			}, {}, {}, {}, {}, {}, {}, {}, {
				changeEstrategy: true,
				star: true
			}, {}, {}, {
				star: true
			}, {}, {
				star: true
			}, {}, {
				star: true
			}, {
				star: true
			}, {
				star: true
			}]
		},
		'Human': {
			name: 'Human',
			type: 'HUMAN',
			ai: false
		},
	};

	A.createPlayer = function(playerName, colorIndex) {
		var player = cloneObject(A.types[playerName]);

		//player.color = A.colors[colorIndex];

		if (player.ai) {
			player.currentStep = 0;
			player.advanceStep = function() {
				var nextStep = player.currentStep + 1;
				var step = player.timeline[player.currentStep];
				if (nextStep < player.timeline.length) {
					player.currentStep = nextStep;
					step = player.timeline[player.currentStep];
					if (step.crossRiver) {
						player.crossRiver = true;
					}
					if (step.star) {
						player.stars++;
					}
					if (step.changeEstrategy) {
						player.strategy++;
					}
				}
				return step;
			};
			player.getCurrentStep = function() {
				return player.timeline[player.currentStep];
			};
		}
		return player;
	}

	/* GET CARD **********/

	A.getCard = (function() {
		
	})();



	return A;
})();



/* ************************************/
//@prepros-prepend config.js
//@prepros-prepend deck.js
//@prepros-prepend automa.js



/* GAME API ********************/

var GAME = (function() {

	var G = {};

	var players = null,
		currentPlayerIndex = -1;

	G.newGame = function(playerOptions) {
		players = [];
		currentPlayerIndex = -1;

		playerOptions.forEach(function(playerName,k) {
			if (playerName !== 'none') {
				var newPlayer = AUTOMA.createPlayer(playerName,k);
				players.push(newPlayer);
			}
		});
		players.forEach(function(player,k){
			if(currentPlayerIndex === -1 && !player.ai){
				currentPlayerIndex = k;
			}
		});
	};

	G.getPlayer = function(){
		return players;
	};

	G.getCurrentPlayer = function(){
		return players[currentPlayerIndex];
	};

	G.advanceCurrentPlayer = function(){
		currentPlayerIndex++;
		if(currentPlayerIndex >= players.length){
			currentPlayerIndex = 0;
		}
		return players[currentPlayerIndex];
	};



	return G;
})();
//@prepros-append setup.js
//@prepros-append components.js
/* SETUP *******************************************/

var width = 10000,
	height = 10000,		
	stage = new Konva.Stage({
		container: 'scythe-container',
		width:width,
		height:height
	}),
	layer = new Konva.Layer(),
	resizeFunctions = [],
	render = function() {
		stage.draw();
	},
	onResize = function(f) {
		resizeFunctions.push(f);
	},
	onResizeWindowEvenListener = function() {
		width = window.innerWidth;
		height = window.innerHeight;

		stage.width(width);
		stage.height(height);

		resizeFunctions.forEach(function(f) {
			f.apply(null, [width, height]);
		});
		render();
	};

stage.add(layer);
onResizeWindowEvenListener();
window.addEventListener('resize', onResizeWindowEvenListener, false);
/********************************************/
/* COMPONENTS *******************************************/

// Panel
var Panel = function() {
	var obj = {},
		visible = false,
		panel = new Konva.Group({
			x: width + 2,
			y: 0
		});

	layer.add(panel);

	var	tweenDuration = 0.6;
		
  obj.node = panel;

	obj.addNode = function(elementNode){
		panel.add(elementNode);
	};
	obj.add = function(element){
		panel.add(element.node);
	};

	obj.show = function(){
		panel.x(width + 2);
		var tweenShow = new Konva.Tween({
      node: panel,
      duration: tweenDuration,
      x: 0,
      easing: Konva.Easings.EaseOut,
      onFinish: function() {
        visible = true;
        panel.x(0);
      }
    });
		tweenShow.play();
	};
	obj.hide = function(){
		panel.x(0);
		var tweenHide = new Konva.Tween({
      node: panel,
      duration: tweenDuration,
      x: -1 * (width + 2),
      easing: Konva.Easings.EaseIn,
      onFinish: function() {
        visible = false;
      }
    });
		tweenHide.play();
	};

	onResize(function(width){
		if(!visible){
			panel.x(width + 2);
		}
	});


	


	return obj;
};



/********************************************/
/* INIT *****************************/

var playerOptions = [
	'Autometta',
	'none',
	'Human',
	'none',	
	'none',
	'none'
];


GAME.newGame(playerOptions);

var jug = GAME.getCurrentPlayer();

jug = GAME.advanceCurrentPlayer();

	render();
})();
